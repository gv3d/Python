# ШИФР ЦЕЗАРЯ
# Описание проекта: требуется написать программу, способную шифровать и дешифровать текст в соответствии
# с алгоритмом Цезаря. Она должна запрашивать у пользователя следующие данные:
# направление: шифрование или дешифрование;
# язык алфавита: русский или английский;
# шаг сдвига (со сдвигом вправо).
# Примечание 1. Считайте, что в русском языке 32 буквы (буква ё отсутствует).
# Примечание 2. Неалфавитные символы — знаки препинания, пробелы, цифры — не меняются.
# Примечание 3. Сохраните регистр символов.
# Составляющие проекта:
# Целые числа (тип int);
# Модульная арифметика;
# Переменные;
# Ввод / вывод данных (функции input() и print());
# Условный оператор (if/elif/else);
# Цикл for/while;
# Строковые методы.
# 10
# Блажен, кто верует, тепло ему на свете!
# >> Лхкрпч, фьш мпъэпь, ьпщхш пцэ чк ымпьп!
# 17
# To be, or not to be, that is the question!
# >> Kf sv, fi efk kf sv, kyrk zj kyv hlvjkzfe!


print('ШИФР ЦЕЗАРЯ приветствует тебя!')
print('Программа позволит вам зашифровать/розшифровать введенный текст.' + '\n')

def step_is_valid(n):  # проверка вводимого числа на валидность
    while not n.isdigit():
        print('Нужно ввести ЦЕЛОЕ ЧИСЛО')
        n = input('Попробуйте еще раз: ')
    return int(n)

def cod_decod_is_valid(s): # проверка вводимого символа (+/-) на валидность
    while s.lower().strip() not in ['+', '-']:
        print('Нужно ввести "+"(шифровать) или "-"(розшифровывать)')
        s = input('Попробуйте eще разок: ')
    return s.lower().strip() # удаляет лишние пробелы и делает символы прописными

def lang_is_valid(s): # проверка вводимого символа (ru/en) на валидность
    while s.lower().strip() not in ['ru', 'en']:
        print('Нужно ввести "ru"(для русского алфавита) или "en"(для английского алфавита)')
        s = input('Попробуйте eще: ')
    return s.lower().strip()

cod_dec = cod_decod_is_valid(input('Будем шифровать(+) или розшифровывать(-)? Введите + или - : '))
lang_cod = lang_is_valid(input('Для использывания русского алфавита введите ru для английского введите en : '))
step = step_is_valid(input('Укажите "шаг сдвига" (целое число): '))
text = input('Теперь введите текст: ').replace('е', 'ё').replace('Е', 'Ё')

def cesars_code(cod_dec, lang_cod, step, text):
    alp = 'абвгдежзийклмнопрстуфхцчшщъыьэюя'
    alp_en = 'abcdefghijklmnopqrstuvwxyz'
    ansv = list()

    if lang_cod == 'en':
        alp = alp_en
    if cod_dec == '-':
        step = -step
    for i in text:  # для каждого символа исходного текста:
        if i.isalpha():  # если символ это буква:
            k = alp.find(i.lower()) + step
            #print('len(alp) =', len(alp), ' k =', k, ' i =', i+'(буква)' ' alp.find(i) =', alp.find(i), ' step =', step)
            if k >= len(alp):  # если шаг больше длины алфавита (при шифровании)
                while k >= len(alp):
                    k -= len(alp)
            if k < len(alp) and k < 0:  # если шаг больше длины алфавита (при расшифровке)
                while abs(k) >= len(alp):
                    k += len(alp)
            if i == i.upper():  # для ЗАГЛАВНЫХ:
                ansv.append(alp[k].upper())
            else:  # для прописных:
                ansv.append(alp[k])
        else:  # если символ это цифра, или знак препинания, или пробел:
            ansv.append(i)
    print('\n' + 'АВЕ ЦЕЗАРЬ!')
    return ''.join(ansv)

print('\n' + 'Результат:' + '\n' + cesars_code(cod_dec, lang_cod, step, text))